#!/bin/python

import sys

import deploy_jenkins, deploy_git

BRANCH_BASE = "commcare_"

HELP_MSG = """'create' creates the release branches and jobs.
'release' creates release tags and updates jenkins job to use it.
'finalize' updates jenkins hotfix version number and deletes release branch
'help' prints this message."""


def create_release():
    """
    Cuts release git branches from master and creates new jenkins release jobs.
    """
    version = deploy_jenkins.create_new_release_jobs()
    deploy_git.create_branches_and_update_versions(BRANCH_BASE, version)

def deploy_release():
    """
    Creates minor release tags from release branch and updates jenkins jobs to
    build from that tag.
    """
    version = deploy_jenkins.get_staged_release_version()

    tag = deploy_git.create_release_tags(BRANCH_BASE, version)
    branch = '{}{}'.format(BRANCH_BASE, version.short_string())
    deploy_jenkins.make_release_jobs_use_tags(version, branch, tag)
    deploy_jenkins.build_release(version)
    print("Run 'deploy finalize' builds are locked in")

def deploy_finalize():
    """
    Increment the hotfix version on commcare-mobile-X.XX in prep for building
    hotfix. Also removes local release branches.
    """
    version = deploy_jenkins.get_staged_release_version()
    deploy_jenkins.inc_hotfix_version(version)
    branch = '{}{}'.format(BRANCH_BASE, version.short_string())
    deploy_git.close_branches(branch)


def create_hotfix():
    """
    Re-open release branch from latest release branch and update release jobs
    to build against those branches.
    """
    # TODO: check that hotfix version was bumped correctly during deploy_release
    version = deploy_jenkins.get_staged_release_version()

    old_tag = "{}{}".format(BRANCH_BASE, version.get_last_hotfix())
    branch = "{}{}".format(BRANCH_BASE, version.short_string())

    deploy_git.checkout_old_tag(old_tag)
    deploy_jenkins.build_jobs_against_branch(branch)

def deploy_hotfix():
    """
    Finalize hotfix by creating its tags and setting the release jobs to build
    off them
    """
    version = deploy_jenkins.get_staged_release_version()
    tag = deploy_git.schedule_hotfix_release(BRANCH_BASE, version)
    deploy_jenkins.inc_hotfix_version(version)

def main():
    if len(sys.argv) > 2:
        print("{} only accepts one argument, {} provided".format(sys.argv[0], len(sys.argv) - 1))
        sys.exit(0)

    command = sys.argv[1]

    if command == 'create':
        create_release()
    elif command == 'release':
        deploy_release()
    elif command == 'finalize':
        deploy_finalize()
    elif command == 'help':
        print(HELP_MSG)


if __name__ == "__main__":
    main()
